%close all% System Parameters
clear all
M = 10;
tx = 1/M; % Probability of transmission
omega = tx*(1-tx)^(M-1);
q01 = 0.1; % Transition probability from 0 to 1
q10 = 0.01; % Transition probability from 1 to 0
q00 = 1 - q01;
q11 = 1 - q10;
N = 1000; % Number of time slots for simulation
P = [1-q01, q01; q10, 1-q10];
% Stationary Distribution
pi0 = q10 / (q10 + q01);
pi1 = q01 / (q10 + q01);
% Initialization
state = randi([0, 1], 1, 1); % Initial states of all sources
target_source = state(1);
lambda = zeros(1, N+1); % Log-likelihood ratio for each source and time slot
Y_history = zeros(N,1);
state_entropy = zeros(1, N); % State estimation entropy for target source at every time slot
states_history = zeros(M,N);
% Markov Chain Transition Matrix
P = [1-q01, q01; q10, 1-q10];
B = [tx*(1 - tx)^(M-1), 0,(1-tx)^M,pi0*(M-1)*omega,pi1*(M-1)*omega,1 - (1-tx)^M - M*omega
     0, tx*(1 - tx)^(M-1),(1-tx)^M,pi0*(M-1)*omega,pi1*(M-1)*omega,1 - (1-tx)^M - M*omega];
A = [0.2 0.8
    0.05 0.95];
%A = 0.5*ones(2);
% Main Simulation Loop for a Single Source
Y_history(1) = 3;
y_values = 1:size(B, 2);  % Create an array of possible output values
for t = 2:N
    if state == 0
        transitionProb = [1-q01, q01]; % Probability of staying at 0 and moving to 1
    else
        transitionProb = [q10, 1-q10]; % Probability of moving to 0 and staying at 1
    end
    state = randsrc(1, 1, [0, 1; transitionProb]);    
    % Draw one of the possible y values based on the emission probabilities for state x
    Y_history(t) = randsrc(1, 1, [y_values; B(state + 1, :)]);
end
%%
%clear all
A = 0.2*ones(2);
A = [0.8 0.2
    0.1 0.9];

q01 = 0.4; % Transition probability from 0 to 1
q10 = 0.05; % Transition probability from 1 to 0
P = [1-q01, q01; q10, 1-q10];
nsamples = 1;
lsample = 8000;
M = 10;
tx = 1/M; % Probability of transmission
omega = tx*(1-tx)^(M-1);
pi0 = q10 / (q10 + q01);
pi1 = q01 / (q10 + q01);
B = [tx*(1 - tx)^(M-1), 0,(1-tx)^M,pi0*(M-1)*omega,pi1*(M-1)*omega,1 - (1-tx)^M - M*omega
     0, tx*(1 - tx)^(M-1),(1-tx)^M,pi0*(M-1)*omega,pi1*(M-1)*omega,1 - (1-tx)^M - M*omega];
Y_history = cell(1,nsamples);

for i = 1:nsamples
    Y_history{i} = hmmgenerate(lsample,P,B);
end
%%
[esTr,esE] = hmmtrain(Y_history,esTr,esE,'Maxiterations',42000,'Tolerance',1e-6);
esTr
